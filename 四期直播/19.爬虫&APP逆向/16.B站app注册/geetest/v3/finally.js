function one(guiji, c, s){
    let l = $_BBCA(
        $_GEy(guiji),
        c,//[12, 58, 98, 36, 43, 95, 62, 15, 12],//n['$_CIY']['c'],  // c
        s//'37643039'//n['$_CIY']['s']  //s
    );
    return l
    // second(all_x, l, all_time)
}

// 第一个参数: 横向滑动距离
// 第二个参数: 加密后的轨迹
// 第三个参数: 滑动持续时间
// 第四个参数: 上一次get.php获取到的所有东西
function second(t, e, n, challenge) {
    let o = {
        'lang': "zh-cn",
        'userresponse': H(t, challenge),  // 对challenge和移动距离  进行加密
        'passtime': n,
        "imgload": 108, // 图片加载时间. 随机即可, 别太离谱就好
        "aa": e, // 轨迹
        "em9j": "5533359231", // 'pabg': "1470424200", // gct计算后. 多了一个npbe参数
        "ep": CBD() // window.performance.timing指纹
    };
    return o;
}

function create_aeskey(){
    let t1 = (65536 * (1 + Math['random']()) | 0)['toString'](16)['substring'](1);
    let t2 = (65536 * (1 + Math['random']()) | 0)['toString'](16)['substring'](1);
    let t3 = (65536 * (1 + Math['random']()) | 0)['toString'](16)['substring'](1);
    let t4 = (65536 * (1 + Math['random']()) | 0)['toString'](16)['substring'](1);
    return t1 + t2 + t3 + t4;
}

function third(o, aeskey, rsa_value){
    // U -> MD5
    // o['rp'] = U(i['gt'] + i['challenge']['slice'](0, 32) + o['passtime']);
    // var u = CBEE(), // 生成aes的key. 以及怼aeskey进行rsa加密. 得到秘闻
    let l = encrypt(
        JSON['stringify'](o),
        aeskey
    ),
    h = gfm(l);
    let f = {
        "gt": o['gt'],
        "challenge": o['challenge'],
        "lang": 'zh-cn',
        "$_BCJ": 3,
        "client_type": 'web_mobile',
        "w": h + rsa_value
    };
    return f;
}
function encrypt(t, e){
    const CryptoJS = require("crypto-js");
    // e = l['parse'](e);
    // n && n['iv'] || ((n = n || {})['iv'] = CryptoJS.enc.Utf8.parse('0000000000000000'));

    const key = CryptoJS.enc.Utf8.parse(e);
    const iv = CryptoJS.enc.Utf8.parse('0000000000000000');

    const source = CryptoJS.enc.Utf8.parse(t);

    let r = CryptoJS.AES.encrypt(source, key, {
        iv: iv,
        mode:CryptoJS.mode.CBC,
        padding: CryptoJS.pad.Pkcs7
    })

    // var r = m['encrypt'](t, key, e, n);  // cipher-core.js  679行
    var i = r['ciphertext']['words'];
    var o = r['ciphertext']['sigBytes'];
    var s = [];
    for (var a = 0; a < o; a++) {
        var _ = i[a >>> 2] >>> 24 - a % 4 * 8 & 255;
        s['push'](_);
    }
    return s;
}


function gfm(t){
    var e = gdr(t);
    return e['res'] + e['end'];
}
function gdr(t, i){
    var o = this;
    i || (i = o);

    var e = function(t, e) {
        for (var n = 0, r = 24 - 1; 0 <= r; r -= 1)
            1 === GCg(e, r) && (n = (n << 1) + GCg(t, r));
        return n;
    };

    for (var n = '', r = '', s = t['length'], a = 0; a < s; a += 3) {
        var _;
        if (a + 2 < s)
            _ = (t[a] << 16) + (t[a + 1] << 8) + t[a + 2],
            n += GAc(e(_, 7274496)) + GAc(e(_, 9483264)) + GAc(e(_, 19220)) + GAc(e(_, 235));
        else {
            var c = s % 3;
            2 == c ? (_ = (t[a] << 16) + (t[a + 1] << 8),
            n += GAc(e(_, 7274496)) + GAc(e(_, 9483264)) + GAc(e(_, 19220)),
            r = '.') : 1 == c && (_ = t[a] << 16,
            n += GAc(e(_, 7274496)) + GAc(e(_, 9483264)),
            r = '.' + '.');
        }
    }
    return {
        'res': n,
        'end': r
    };
}

function GCg(t, e) {
    return t >> e & 1;
}

function GAc(t){
    var e = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789()';
    return t < 0 || t >= e['length'] ? '.' : e['charAt'](t);
}


function CBD(){
    return {
        'v': '7.8.6',  //  slice.js  版本
        '$_BHR': false,
        'me': true,
        'tm': cul_performance_timing(),
        'td': -1
    };
}


function cul_performance_timing(){
    let tm = new Date().getTime();
    return {
        "a": tm, // 1657247126092
        "b": tm + 533, // +随机
        "c": tm + 533, // 0
        "d": 0, // all
        "e": 0, // all
        "f": tm + 1,
        "g": tm + 264, //1657247126356,
        "h": tm + 264, //1657247126356,
        "i": tm + 264, //1657247126356,
        "j": tm + 278, //1657247126370,
        "k": tm + 272, //1657247126364,
        "l": tm + 279, //1657247126371,
        "m": tm + 527, //1657247126619,
        "n": tm + 528, //1657247126620,
        "o": tm + 535, //1657247126627,
        "p": tm + 1076, //1657247127186,
        "q": tm + 1076, //1657247127186,
        "r": tm + 1078, //1657247127188,
        "s": tm + 1140, //1657247127232,
        "t": tm + 1140, //1657247127232,
        "u": tm + 1140, //1657247127232
    };

}


function H(t, e) {
    for (var n = e['slice'](-2), r = [], i = 0; i < n['length']; i++) {
        var o = n['charCodeAt'](i);
        r[i] = 57 < o ? o - 87 : o - 48;
    }
    n = 36 * r[0] + r[1];
    var s, a = Math['round'](t) + n, _ = [[], [], [], [], []], c = {}, u = 0;
    i = 0;
    for (var l = (e = e['slice'](0, -2))['length']; i < l; i++)
        c[s = e['charAt'](i)] || (c[s] = 1,
            _[u]['push'](s),
            u = 5 == ++u ? 0 : u);
    var h, f = a, d = 4, p = '', g = [1, 2, 5, 10, 50];
    while (0 < f)
        0 <= f - g[d] ? (h = parseInt(Math['random']() * _[d]['length'], 10),
            p += _[d][h],
            f -= g[d]) : (_['splice'](d, 1),
            g['splice'](d, 1),
            d -= 1);
    return p;
}

function $_BBCA(t, e, n) {
    if (!e || !n)
        return t;
    var r, i = 0, o = t, s = e[0], a = e[2], _ = e[4];
    while (r = n['substr'](i, 2)) {
        i += 2;
        var c = parseInt(r, 16)
          , u = String['fromCharCode'](c)
          , l = (s * c * c + a * c + _) % t['length'];
        o = o['substr'](0, l) + u + o['substr'](l);
    }
    return o;
}


// let gui = [
//     [
//         -26,
//         -40,
//         0
//     ],
//     [
//         0,
//         0,
//         0
//     ],
//     [
//         0,
//         0,
//         8
//     ],
//     [
//         1,
//         0,
//         12
//     ],
//     [
//         1,
//         0,
//         14
//     ],
//     [
//         2,
//         0,
//         16
//     ],
//     [
//         3,
//         0,
//         18
//     ],
//     [
//         3,
//         0,
//         20
//     ],
//     [
//         4,
//         0,
//         22
//     ],
//     [
//         4,
//         0,
//         24
//     ],
//     [
//         5,
//         0,
//         26
//     ],
//     [
//         5,
//         0,
//         28
//     ],
//     [
//         7,
//         0,
//         30
//     ],
//     [
//         8,
//         0,
//         33
//     ],
//     [
//         9,
//         1,
//         34
//     ],
//     [
//         11,
//         1,
//         36
//     ],
//     [
//         12,
//         1,
//         39
//     ],
//     [
//         13,
//         1,
//         40
//     ],
//     [
//         14,
//         1,
//         42
//     ],
//     [
//         16,
//         1,
//         44
//     ],
//     [
//         19,
//         1,
//         46
//     ],
//     [
//         21,
//         1,
//         49
//     ],
//     [
//         23,
//         1,
//         50
//     ],
//     [
//         25,
//         1,
//         52
//     ],
//     [
//         27,
//         1,
//         54
//     ],
//     [
//         29,
//         1,
//         56
//     ],
//     [
//         32,
//         1,
//         58
//     ],
//     [
//         34,
//         1,
//         60
//     ],
//     [
//         36,
//         1,
//         62
//     ],
//     [
//         39,
//         1,
//         64
//     ],
//     [
//         41,
//         1,
//         66
//     ],
//     [
//         43,
//         1,
//         68
//     ],
//     [
//         45,
//         1,
//         70
//     ],
//     [
//         47,
//         1,
//         72
//     ],
//     [
//         49,
//         1,
//         74
//     ],
//     [
//         52,
//         1,
//         76
//     ],
//     [
//         54,
//         1,
//         78
//     ],
//     [
//         56,
//         0,
//         80
//     ],
//     [
//         58,
//         0,
//         82
//     ],
//     [
//         60,
//         0,
//         84
//     ],
//     [
//         61,
//         0,
//         86
//     ],
//     [
//         64,
//         0,
//         88
//     ],
//     [
//         65,
//         0,
//         90
//     ],
//     [
//         66,
//         0,
//         92
//     ],
//     [
//         68,
//         0,
//         94
//     ],
//     [
//         70,
//         0,
//         96
//     ],
//     [
//         71,
//         0,
//         98
//     ],
//     [
//         72,
//         0,
//         100
//     ],
//     [
//         74,
//         0,
//         102
//     ],
//     [
//         76,
//         0,
//         104
//     ],
//     [
//         77,
//         0,
//         106
//     ],
//     [
//         79,
//         -1,
//         108
//     ],
//     [
//         80,
//         -1,
//         110
//     ],
//     [
//         82,
//         -1,
//         112
//     ],
//     [
//         83,
//         -1,
//         114
//     ],
//     [
//         84,
//         -1,
//         117
//     ],
//     [
//         85,
//         -1,
//         118
//     ],
//     [
//         87,
//         -1,
//         120
//     ],
//     [
//         88,
//         -1,
//         122
//     ],
//     [
//         89,
//         -1,
//         124
//     ],
//     [
//         91,
//         -1,
//         126
//     ],
//     [
//         91,
//         -1,
//         128
//     ],
//     [
//         92,
//         -1,
//         130
//     ],
//     [
//         94,
//         -1,
//         134
//     ],
//     [
//         95,
//         -1,
//         134
//     ],
//     [
//         96,
//         -1,
//         136
//     ],
//     [
//         97,
//         -1,
//         138
//     ],
//     [
//         98,
//         -1,
//         140
//     ],
//     [
//         99,
//         -1,
//         142
//     ],
//     [
//         100,
//         -1,
//         144
//     ],
//     [
//         100,
//         -1,
//         146
//     ],
//     [
//         101,
//         -1,
//         149
//     ],
//     [
//         102,
//         -1,
//         150
//     ],
//     [
//         103,
//         -1,
//         152
//     ],
//     [
//         104,
//         -1,
//         154
//     ],
//     [
//         105,
//         -1,
//         156
//     ],
//     [
//         106,
//         -1,
//         158
//     ],
//     [
//         107,
//         -1,
//         160
//     ],
//     [
//         108,
//         -1,
//         162
//     ],
//     [
//         108,
//         -1,
//         164
//     ],
//     [
//         109,
//         -1,
//         166
//     ],
//     [
//         110,
//         -1,
//         168
//     ],
//     [
//         110,
//         -1,
//         170
//     ],
//     [
//         111,
//         -1,
//         172
//     ],
//     [
//         112,
//         -1,
//         174
//     ],
//     [
//         112,
//         -1,
//         176
//     ],
//     [
//         112,
//         -1,
//         178
//     ],
//     [
//         113,
//         -1,
//         180
//     ],
//     [
//         114,
//         -1,
//         183
//     ],
//     [
//         114,
//         -1,
//         184
//     ],
//     [
//         115,
//         -1,
//         188
//     ],
//     [
//         116,
//         -1,
//         190
//     ],
//     [
//         116,
//         -1,
//         194
//     ],
//     [
//         116,
//         -1,
//         199
//     ],
//     [
//         117,
//         -1,
//         200
//     ],
//     [
//         118,
//         -1,
//         204
//     ],
//     [
//         118,
//         -1,
//         208
//     ],
//     [
//         119,
//         -1,
//         212
//     ],
//     [
//         120,
//         -1,
//         214
//     ],
//     [
//         120,
//         -1,
//         218
//     ],
//     [
//         120,
//         -1,
//         220
//     ],
//     [
//         121,
//         -1,
//         222
//     ],
//     [
//         122,
//         -1,
//         226
//     ],
//     [
//         122,
//         -1,
//         228
//     ],
//     [
//         123,
//         -1,
//         231
//     ],
//     [
//         124,
//         -1,
//         233
//     ],
//     [
//         124,
//         -1,
//         234
//     ],
//     [
//         125,
//         -1,
//         236
//     ],
//     [
//         126,
//         -1,
//         238
//     ],
//     [
//         127,
//         -1,
//         240
//     ],
//     [
//         128,
//         -1,
//         242
//     ],
//     [
//         129,
//         -1,
//         244
//     ],
//     [
//         130,
//         -1,
//         246
//     ],
//     [
//         132,
//         -1,
//         249
//     ],
//     [
//         132,
//         -1,
//         250
//     ],
//     [
//         134,
//         -1,
//         252
//     ],
//     [
//         135,
//         -1,
//         254
//     ],
//     [
//         136,
//         -1,
//         256
//     ],
//     [
//         138,
//         -1,
//         258
//     ],
//     [
//         139,
//         -1,
//         260
//     ],
//     [
//         140,
//         -1,
//         262
//     ],
//     [
//         142,
//         -1,
//         264
//     ],
//     [
//         144,
//         -1,
//         266
//     ],
//     [
//         145,
//         -1,
//         268
//     ],
//     [
//         147,
//         -1,
//         270
//     ],
//     [
//         148,
//         -1,
//         272
//     ],
//     [
//         150,
//         -1,
//         274
//     ],
//     [
//         152,
//         -1,
//         276
//     ],
//     [
//         153,
//         -1,
//         279
//     ],
//     [
//         155,
//         -1,
//         280
//     ],
//     [
//         156,
//         -1,
//         282
//     ],
//     [
//         157,
//         -1,
//         284
//     ],
//     [
//         158,
//         -1,
//         286
//     ],
//     [
//         160,
//         -1,
//         288
//     ],
//     [
//         161,
//         -1,
//         290
//     ],
//     [
//         162,
//         -1,
//         292
//     ],
//     [
//         163,
//         -1,
//         294
//     ],
//     [
//         164,
//         -1,
//         296
//     ],
//     [
//         164,
//         -1,
//         299
//     ],
//     [
//         165,
//         -1,
//         300
//     ],
//     [
//         166,
//         -1,
//         302
//     ],
//     [
//         166,
//         -1,
//         304
//     ],
//     [
//         167,
//         -1,
//         306
//     ],
//     [
//         168,
//         -1,
//         308
//     ],
//     [
//         168,
//         -1,
//         310
//     ],
//     [
//         168,
//         -1,
//         312
//     ],
//     [
//         169,
//         -1,
//         314
//     ],
//     [
//         170,
//         -1,
//         318
//     ],
//     [
//         170,
//         -1,
//         320
//     ],
//     [
//         171,
//         -1,
//         325
//     ],
//     [
//         172,
//         -1,
//         330
//     ],
//     [
//         172,
//         -1,
//         535
//     ]
// ]

function $_GEy(guiji) {
    function n(t) {
        var e ='()*,-./0123456789:?@ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqr'
          , n = e['length']
          , r = ''
          , i = Math['abs'](t)
          , o = parseInt(i / n);
        n <= o && (o = n - 1),
        o && (r = e['charAt'](o));
        var s = '';
        return t < 0 && (s += '!'),
        r && (s += '$'),
        s + r + e['charAt'](i %= n);
    }
    var t = function(t) {
        for (var e, n, r, i = [], o = 0, s = 0, a = t['length'] - 1; s < a; s++)
            e = Math['round'](t[s + 1][0] - t[s][0]),
            n = Math['round'](t[s + 1][1] - t[s][1]),
            r = Math['round'](t[s + 1][2] - t[s][2]),
            0 == e && 0 == n && 0 == r || (0 == e && 0 == n ? o += r : (i['push']([e, n, r + o]),
            o = 0));
        return 0 !== o && i['push']([e, n, o]),
        i;
    }(guiji)
      , r = []
      , i = []
      , o = [];
    return t.map(function(t) {
        var e = function(t) {
            for (var e = [[1, 0], [2, 0], [1, -1], [1, 1], [0, 1], [0, -1], [3, 0], [2, -1], [2, 1]], n = 0, r = e['length']; n < r; n++)
                if (t[0] == e[n][0] && t[1] == e[n][1])
                    return 'stuvwxyz~'[n];
            return 0;
        }(t);
        e ? i['push'](e) : (r['push'](n(t[0])),
        i['push'](n(t[1]))),
        o['push'](n(t[2]));
    }),
    r['join']('') + '!!' + i['join']('') + '!!' + o['join']('');
}
