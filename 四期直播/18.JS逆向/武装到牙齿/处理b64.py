import base64
from hashlib import md5
from Crypto.Cipher import DES
from Crypto.Util.Padding import pad, unpad

# s = "ZXZhbChmdW5jdGlvbihwLGEsYyxrLGUsZCl7ZT1mdW5jdGlvbihjKXtyZXR1cm4oYzxhPycnOmUocGFyc2VJbnQoYy9hKSkpKygoYz1jJWEpPjM1P1N0cmluZy5mcm9tQ2hhckNvZGUoYysyOSk6Yy50b1N0cmluZygzNikpfTtpZighJycucmVwbGFjZSgvXi8sU3RyaW5nKSl7d2hpbGUoYy0tKXtkW2UoYyldPWtbY118fGUoYyl9az1bZnVuY3Rpb24oZSl7cmV0dXJuIGRbZV19XTtlPWZ1bmN0aW9uKCl7cmV0dXJuJ1xcdysnfTtjPTF9O3doaWxlKGMtLSl7aWYoa1tjXSl7cD1wLnJlcGxhY2UobmV3IFJlZ0V4cCgnXFxiJytlKGMpKydcXGInLCdnJyksa1tjXSl9fXJldHVybiBwfSgnZiBVPSIyNyI7ZiBUPSIxdiI7ZiAxbD0iMXciO2YgMXI9IjF4IjtmIFo9IjFIIjtmIFM9IjFJIjtmIDFCPSIxSyI7ZiAxSj0iMUciO2YgWD1cJzFGPT1cJztmIFk9XCcxRVwnOzIgRj17azo2KDQpezIgYj1xIDFhKCk7OSBiLjFEKDQpfSxpOjYoNCl7MiBiPXEgMWEoKTs5IGIuMUMoNCl9fTsyIEI9e2s6Nig0LDcsaCl7MiBhPSgzLnQoNykuaigpKS53KDAsMTYpOzIgYz0oMy50KGgpLmooKSkudygyNCw4KTthPTMuby5uLnAoYSk7Yz0zLm8ubi5wKGMpOzIgZz0zLkIuayg0LGEse2g6Yyx4OjMueC5RLFA6My5PLk59KTs5IGcuaigpfSxpOjYoNCw3LGgpezIgYT0oMy50KDcpLmooKSkudygwLDE2KTsyIGM9KDMudChoKS5qKCkpLncoMjQsOCk7YT0zLm8ubi5wKGEpO2M9My5vLm4ucChjKTsyIGc9My5CLmkoNCxhLHtoOmMseDozLnguUSxQOjMuTy5OfSk7OSBnLmooMy5vLm4pfX07MiB1PXtrOjYoNCw3LGgpezIgYT0oMy50KDcpLmooKSkudygxNiwxNik7MiBjPSgzLnQoaCkuaigpKS53KDAsMTYpO2E9My5vLm4ucChhKTtjPTMuby5uLnAoYyk7MiBnPTMudS5rKDQsYSx7aDpjLHg6My54LlEsUDozLk8uTn0pOzkgZy5qKCl9LGk6Nig0LDcsaCl7MiBhPSgzLnQoNykuaigpKS53KDE2LDE2KTsyIGM9KDMudChoKS5qKCkpLncoMCwxNik7YT0zLm8ubi5wKGEpO2M9My5vLm4ucChjKTsyIGc9My51LmkoNCxhLHtoOmMseDozLnguUSxQOjMuTy5OfSk7OSBnLmooMy5vLm4pfX07MiAxNz17MWQ6NihsLDFlKXsyIDQ9RC5MKDFlKTs0PUYuayg0KTs0PXUuayg0LFgsWSk7MVl7Ry4xZihsLDQpfTIyKDFnKXtyKDFnLmw9PT1cJzIzXCcpe0cuMjUoKTtHLjFmKGwsNCl9fX0sMU06NihsKXs5IEcuMWMobCl9LDE5OjYobCl7MiA0PUcuMWMobCk7MiBnPVY7cig0KXs0PXUuaSg0LFgsWSk7ND1GLmkoNCk7Zz1ELnAoNCl9OSBnfSwyYTo2KGwpe0cuMjAobCl9fTs2IDFaKG0pe209dS5pKG0sVSxUKTs5IG19NiAxWChtKXttPUIuaShtLFosUyk7OSBtfTYgMXMoNyx6KXtyKDFXIHo9PT1cJzFWXCcpe3o9MH0yIGQ9Qi5rKDcpO2Q9Ri5rKDcpOzIgZT0xNy4xOSg3KTtyKGUpe2YgSD1lLkg7ZiAxaT1xIHYoKS4xNSgpO3IocSB2KCkuVygpPj0wJiZxIHYoKS5XKCk8NSYmej4xKXt6PTF9cigxaS0oeioxaioxaioxVSk+SCl7ZT1WfXIocSB2KCkuVygpPj01JiZxIHYoSCkuMWsoKSE9PXEgdigpLjFrKCkmJno9PT0yNCl7ZT1WfX05IGV9NiAxMyhzKXsyIEU9e307MXEuMXAocykuMW4oKS4xbSg2KDcpe0VbN109c1s3XX0pOzkgRX02IDE4KGUpe2U9dS5pKGUsVSxUKTtlPUIuaShlLFosUyk7ZT1GLmkoZSk7OSBlfTIgMW89KDYoKXs2IDEzKHMpezIgRT17fTsxcS4xcChzKS4xbigpLjFtKDYoNyl7RVs3XT1zWzddfSk7OSBFfTkgNihLLHMpezIgTT1cJzFRXCc7MiBKPVwnMVBcJzsyIEk9cSB2KCkuMTUoKTsyIEM9e006TSxLOkssSTpJLEo6SiwyNjpzLDFMOjF0KE0rSytJK0orRC5MKDEzKHMpKSl9O0M9Ri5rKEQuTChDKSk7Qz11LmsoQywxbCwxcik7OSBDfX0pKCk7NiAxUigxMiwxMSxSLDE0KXtmIDEwPTF0KDEyK0QuTCgxMSkpO2YgeT0xcygxMCwxNCk7cigheSl7MiBtPTFvKDEyLDExKTskLjFTKHsxVDpcJy4uLzFPLzJiLjI5XCcsZTp7Mjg6bX0sMjE6IjFOIiwxaDo2KHkpe3k9MTgoeSk7QT1ELnAoeSk7cihBLjFoKXtyKDE0PjApe0EuZy5IPXEgdigpLjE1KCk7MTcuMWQoMTAsQS5nKX1SKEEuZyl9MWJ7MXkuMXUoQS4xQSxBLjF6KX19fSl9MWJ7Uih5KX19Jyw2MiwxMzYsJ3x8dmFyfENyeXB0b0pTfHRleHR8fGZ1bmN0aW9ufGtleXx8cmV0dXJufHNlY3JldGtleXx8c2VjcmV0aXZ8fGRhdGF8Y29uc3R8cmVzdWx0fGl2fGRlY3J5cHR8dG9TdHJpbmd8ZW5jcnlwdHxuYW1lfHBvVkt6M218VXRmOHxlbmN8cGFyc2V8bmV3fGlmfG9ianxNRDV8QUVTfERhdGV8c3Vic3RyfG1vZGV8ZDlPcUN8cGVyaW9kfG9qa3ZSWHxERVN8cGFyYW18SlNPTnxuZXdPYmplY3R8QkFTRTY0fGxvY2FsU3RvcmFnZXx0aW1lfHRpbWVzdGFtcHxjbGllbnR0eXBlfG1ldGhvZHxzdHJpbmdpZnl8YXBwSWR8UGtjczd8cGFkfHBhZGRpbmd8Q0JDfGNyaW9jaXg5OHxkc2lIOEFaNzJ2Nkh8YXNpQ3lXMVBwM2lKfGFza1p2SVZFcUVCY3xudWxsfGdldEhvdXJzfGFlc19sb2NhbF9rZXl8YWVzX2xvY2FsX2l2fGRza2xSRGVFb2swenxrZjBNfG9vNVVHWFFUczB8bVBQT2xQdGcyfE9iamVjdFNvcnR8cEZYa05UQ3xnZXRUaW1lfHxsb2NhbFN0b3JhZ2VVdGlsfGRTV3NUeGh1a2F3a0ZnfGdldFZhbHVlfEJhc2U2NHxlbHNlfGdldEl0ZW18c2F2ZXx2YWx1ZXxzZXRJdGVtfG9FeGNlcHRpb258c3VjY2Vzc3xjdXJyZW50fDYwfGdldERhdGV8YWNrc2g4Q0pwc1QxfG1hcHxzb3J0fHB6enNqRk94S1hTYzV8a2V5c3xPYmplY3R8YWNpSWh0aUJmYXVVfGd0M1FLeDNDRmRhUUc3V218aGV4X21kNXxsb2d8YlE2U0swcHJ3bmhOandYNnxkbDJOMkk5MHI2d1NwWXZDfGZWcHJJcllDamhKQk80YVF8Y29uc29sZXxlcnJtc2d8ZXJyY29kZXxkY2tVYnM5ZHVCd298ZGVjb2RlfGVuY29kZXxlbWhsYm5GcGNHRnNiV2wyfGVtaGxibkZwY0dGc2JXdGxlUXxwelBSdGZRdmx3anY2aXFsfGhhcWkya3BNd0tnbDRGNjF8eHZTc1I5REFQWW81Q2xFV3xkY2lFUU5Mc3F5NVd8b3Ftb3FUNjc4TGF6bWJ1WXxzZWNyZXR8Y2hlY2t8cG9zdHxhcGluZXd8V0VCfGY2NzZmMTFlZTYyZTUwNzgxYzlkNTM0MzJkMzAzYTNkfHNQYlVyN0lBWFA5VUpHYXxhamF4fHVybHwxMDAwfHVuZGVmaW5lZHx0eXBlb2Z8ZHA1Q21WUXV0Z3x0cnl8ZDI3VW1ndkZLQWl8cmVtb3ZlSXRlbXx0eXBlfGNhdGNofFF1b3RhRXhjZWVkZWRFcnJvcnx8Y2xlYXJ8b2JqZWN0fGFFM1hFaDZISm9GVWNjeUV8aFVPVEFRVmFIfHBocHxyZW1vdmV8YXFpc3R1ZHlhcGknLnNwbGl0KCd8JyksMCx7fSkpCg=="
# print(base64.b64decode(s).decode())
s = "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"
key = 'haqi2kpMwKgl4F61'
obj = md5()
obj.update(key.encode("utf-8"))
bs_key = obj.hexdigest()[0:8]

iv = 'xvSsR9DAPYo5ClEW'
obj = md5()
obj.update(iv.encode("utf-8"))
bs_iv = obj.hexdigest()[24: 24+8]

print(bs_key, bs_iv)
des = DES.new(key=bs_key, mode=DES.MODE_CBC, IV=bs_iv)
data = base64.b64decode(s)
ss = des.decrypt(data)
print(ss)

